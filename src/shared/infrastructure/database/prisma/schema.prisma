generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique @db.VarChar(255)
  username  String    @unique @db.VarChar(30)
  password  String    @db.VarChar(128)
  isActive  Boolean   @default(true) @map("is_active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  createdBy String    @map("created_by")
  updatedBy String?   @map("updated_by")
  teacher   Teacher[]

  @@index([email, isActive])
  @@index([username, isActive])
}

model Teacher {
  id        String    @id @default(uuid())
  userId    String?   @map("user_id")
  name      String    @unique @db.VarChar(255)
  isActive  Boolean   @default(true) @map("is_active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  createdBy String    @map("created_by")
  updatedBy String?   @map("updated_by")
  articles  Article[]
  User      User?     @relation(fields: [userId], references: [id])

  @@index([name, isActive])
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique @db.VarChar(50)
  color     String    @default("#000000") @db.Char(7)
  isActive  Boolean   @default(true) @map("is_active")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  createdBy String    @map("created_by")
  updatedBy String?   @map("updated_by")
  articles  Article[]

  @@index([name, isActive])
}

model Article {
  id                String    @id @default(uuid())
  teacherId         String    @map("teacher_id")
  categoryId        String    @map("category_id")
  title             String    @unique @db.VarChar(150)
  slug              String    @unique @db.VarChar(150)
  summary           String    @db.VarChar(200)
  readingTime       Int       @map("reading_time")
  content           String    @db.Text
  highlightImageUrl String?   @map("highlight_image_url")
  publishedLastDate DateTime  @map("published_last_date")
  isPublished       Boolean   @default(true) @map("is_published")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime? @updatedAt @map("updated_at")
  createdBy         String    @map("created_by")
  updatedBy         String?   @map("updated_by")
  Teacher           Teacher   @relation(fields: [teacherId], references: [id])
  Category          Category  @relation(fields: [categoryId], references: [id])

  @@index([title, isPublished])
}
