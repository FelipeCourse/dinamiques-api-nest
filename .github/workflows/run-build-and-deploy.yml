name: CD - build and deploy

on:
  push:
    branches:
      - main

jobs:
  run-build-and-deploy:
    name: Run build and deploy
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: '${{ secrets.DATABASE_PROTOCOL }}://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@${{ secrets.DATABASE_HOST }}:5432/${{ secrets.DATABASE_NAME }}?schema=public'
      DATABASE_USER: '${{ secrets.DATABASE_USER }}'
      DATABASE_PASSWORD: '${{ secrets.DATABASE_PASSWORD }}'
      DATABASE_NAME: '${{ secrets.DATABASE_NAME }}'
      DOCKER_HUB_IMAGE_NAME: 'felipedr7/dinamiques-nest-api:latest'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up docker
        uses: docker/setup-buildx-action@v3

      - name: Install docker compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to docker hub
        run: |
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build docker images
        run: |
          echo "DATABASE_URL=${DATABASE_URL}" > .env
          echo "DATABASE_USER=${DATABASE_USER}" >> .env
          echo "DATABASE_PASSWORD=${DATABASE_PASSWORD}" >> .env
          echo "DATABASE_NAME=${DATABASE_NAME}" >> .env
          docker-compose -f docker-compose.yml build

      - name: Check if the build was successful
        run: |
          IMAGE_ID=$(docker images -q $DOCKER_HUB_IMAGE_NAME 2> /dev/null)
          if [ -z "$IMAGE_ID" ]; then
            echo "Error: image '$DOCKER_HUB_IMAGE_NAME' not found."
            echo "Build may have failed or the image may not exist."
            exit 1
          fi
          echo "Image '$DOCKER_HUB_IMAGE_NAME' built successfully with id: $IMAGE_ID"

      - name: Push docker image to docker hub
        run: |
          docker push $DOCKER_HUB_IMAGE_NAME
